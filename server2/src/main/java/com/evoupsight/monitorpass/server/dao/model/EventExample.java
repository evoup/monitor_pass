package com.evoupsight.monitorpass.server.dao.model;

import java.util.ArrayList;
import java.util.List;

public class EventExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table event
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table event
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table event
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table event
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table event
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        EventExample example = new EventExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event
     *
     * @mbg.generated
     */
    public EventExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table event
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEventIsNull() {
            addCriterion("event is null");
            return (Criteria) this;
        }

        public Criteria andEventIsNotNull() {
            addCriterion("event is not null");
            return (Criteria) this;
        }

        public Criteria andEventEqualTo(String value) {
            addCriterion("event =", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("event = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventNotEqualTo(String value) {
            addCriterion("event <>", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("event <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGreaterThan(String value) {
            addCriterion("event >", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("event > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventGreaterThanOrEqualTo(String value) {
            addCriterion("event >=", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("event >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventLessThan(String value) {
            addCriterion("event <", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("event < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventLessThanOrEqualTo(String value) {
            addCriterion("event <=", value, "event");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andEventLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("event <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEventLike(String value) {
            addCriterion("event like", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotLike(String value) {
            addCriterion("event not like", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventIn(List<String> values) {
            addCriterion("event in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotIn(List<String> values) {
            addCriterion("event not in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventBetween(String value1, String value2) {
            addCriterion("event between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotBetween(String value1, String value2) {
            addCriterion("event not between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("`time` is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("`time` is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Integer value) {
            addCriterion("`time` =", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Integer value) {
            addCriterion("`time` <>", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Integer value) {
            addCriterion("`time` >", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("`time` >=", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Integer value) {
            addCriterion("`time` <", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Integer value) {
            addCriterion("`time` <=", value, "time");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTimeLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`time` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Integer> values) {
            addCriterion("`time` in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Integer> values) {
            addCriterion("`time` not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Integer value1, Integer value2) {
            addCriterion("`time` between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("`time` not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedIsNull() {
            addCriterion("acknowledged is null");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedIsNotNull() {
            addCriterion("acknowledged is not null");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedEqualTo(Boolean value) {
            addCriterion("acknowledged =", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedNotEqualTo(Boolean value) {
            addCriterion("acknowledged <>", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedGreaterThan(Boolean value) {
            addCriterion("acknowledged >", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("acknowledged >=", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedLessThan(Boolean value) {
            addCriterion("acknowledged <", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedLessThanOrEqualTo(Boolean value) {
            addCriterion("acknowledged <=", value, "acknowledged");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgedLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledged <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgedIn(List<Boolean> values) {
            addCriterion("acknowledged in", values, "acknowledged");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedNotIn(List<Boolean> values) {
            addCriterion("acknowledged not in", values, "acknowledged");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedBetween(Boolean value1, Boolean value2) {
            addCriterion("acknowledged between", value1, value2, "acknowledged");
            return (Criteria) this;
        }

        public Criteria andAcknowledgedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("acknowledged not between", value1, value2, "acknowledged");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeIsNull() {
            addCriterion("acknowledge is null");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeIsNotNull() {
            addCriterion("acknowledge is not null");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeEqualTo(String value) {
            addCriterion("acknowledge =", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeNotEqualTo(String value) {
            addCriterion("acknowledge <>", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeGreaterThan(String value) {
            addCriterion("acknowledge >", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeGreaterThanOrEqualTo(String value) {
            addCriterion("acknowledge >=", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeLessThan(String value) {
            addCriterion("acknowledge <", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeLessThanOrEqualTo(String value) {
            addCriterion("acknowledge <=", value, "acknowledge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andAcknowledgeLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("acknowledge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAcknowledgeLike(String value) {
            addCriterion("acknowledge like", value, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeNotLike(String value) {
            addCriterion("acknowledge not like", value, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeIn(List<String> values) {
            addCriterion("acknowledge in", values, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeNotIn(List<String> values) {
            addCriterion("acknowledge not in", values, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeBetween(String value1, String value2) {
            addCriterion("acknowledge between", value1, value2, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andAcknowledgeNotBetween(String value1, String value2) {
            addCriterion("acknowledge not between", value1, value2, "acknowledge");
            return (Criteria) this;
        }

        public Criteria andTriggerIdIsNull() {
            addCriterion("trigger_id is null");
            return (Criteria) this;
        }

        public Criteria andTriggerIdIsNotNull() {
            addCriterion("trigger_id is not null");
            return (Criteria) this;
        }

        public Criteria andTriggerIdEqualTo(Long value) {
            addCriterion("trigger_id =", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdNotEqualTo(Long value) {
            addCriterion("trigger_id <>", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdNotEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdGreaterThan(Long value) {
            addCriterion("trigger_id >", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdGreaterThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("trigger_id >=", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdGreaterThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdLessThan(Long value) {
            addCriterion("trigger_id <", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdLessThanColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdLessThanOrEqualTo(Long value) {
            addCriterion("trigger_id <=", value, "triggerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria andTriggerIdLessThanOrEqualToColumn(Event.Column column) {
            addCriterion(new StringBuilder("trigger_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTriggerIdIn(List<Long> values) {
            addCriterion("trigger_id in", values, "triggerId");
            return (Criteria) this;
        }

        public Criteria andTriggerIdNotIn(List<Long> values) {
            addCriterion("trigger_id not in", values, "triggerId");
            return (Criteria) this;
        }

        public Criteria andTriggerIdBetween(Long value1, Long value2) {
            addCriterion("trigger_id between", value1, value2, "triggerId");
            return (Criteria) this;
        }

        public Criteria andTriggerIdNotBetween(Long value1, Long value2) {
            addCriterion("trigger_id not between", value1, value2, "triggerId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table event
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table event
         *
         * @mbg.generated
         */
        private EventExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        protected Criteria(EventExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public EventExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table event
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table event
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table event
         *
         * @mbg.generated
         */
        void example(com.evoupsight.monitorpass.server.dao.model.EventExample example);
    }
}